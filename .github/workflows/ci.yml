name: All CI

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  # Check which files / paths have changed.
  # We use this to inform whether we should run later jobs.
  changes:
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: '.github/filters.yml'
    - name: Print changes
      run: printf "Backend changed $BACKEND\nFrontend changed $FRONTEND\n"
      env:
        BACKEND: ${{ steps.filter.outputs.backend }}
        FRONTEND: ${{ steps.filter.outputs.frontend }}


  # Build the backend image and publish to Docker Hub.
  build_push_backend:
    needs: [changes]
    if: needs.changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
    - uses: actions/checkout@v3
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PERSONAL_ACCESS_TOKEN }}
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: banool/slsl-backend
        # 1. Tag the image with the branch name on push
        # 2. Tag the image with the commit hash
        tags: |
          type=ref,event=branch
          type=sha,format=long
    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: backend
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  # Build static and push it to the bucket
  build_push_static_files:
    needs: [changes]
    if: needs.changes.outputs.backend == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v2
    - uses: snok/install-poetry@d45b6d76012debf457ab49dffc7fb7b2efe8071d
      with:
        version: 1.3.2

    - run: poetry install
      shell: bash
      working-directory: ./backend

    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        service_account: 'githubactions@slsl-dictionary.iam.gserviceaccount.com'
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON}}

    # This collects static files directly to the bucket.
    - name: Collect static files
      env:
        admin_bucket_name: "slsl-admin-bucket-31cc83f"
        media_bucket_name: "ignored"
      run: poetry run python manage.py collectstatic --noinput
